{
    "content":"# A headless service to create DNS records\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.alpha.kubernetes.io/tolerate-unready-endpoints: \"true\"\n  name: db\n  labels:\n    app: mysql\nspec:\n  ports:\n  - port: 3306\n    name: mysql\n  # *.galear.default.svc.cluster.local\n  clusterIP: None\n  selector:\n    app: mysql\n---\napiVersion: apps/v1beta1\nkind: StatefulSet\nmetadata:\n  name: mysql\nspec:\n  serviceName: \"db\"\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      nodeSelector:\n        stack: dryrun\n      initContainers:\n      - name: install\n        image: 10.145.88.66:5000/demo/galera-install\n        imagePullPolicy: Always\n        args:\n        - \"--work-dir=/work-dir\"\n        volumeMounts:\n        - name: workdir\n          mountPath: \"/work-dir\"\n        - name: config\n          mountPath: \"/etc/mysql\"\n      - name: bootstrap\n        image: 10.145.88.66:5000/demo/debian:jessie\n        command:\n        - \"/work-dir/peer-finder\"\n        args:\n        - -on-start=\"/work-dir/on-start.sh\"\n        - \"-service=db\"\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: workdir\n          mountPath: \"/work-dir\"\n        - name: config\n          mountPath: \"/etc/mysql\"\n      containers:\n      - name: mysql\n        image: 10.145.88.66:5000/demo/mysql-galera\n        resources:\n          limits:\n            cpu: 1000m\n            memory: 1024Mi\n        ports:\n        - containerPort: 3306\n          name: mysql\n        - containerPort: 4444\n          name: sst\n        - containerPort: 4567\n          name: replication\n        - containerPort: 4568\n          name: ist\n        args:\n        - --defaults-file=/etc/mysql/my-galera.cnf\n        - --user=root\n        readinessProbe:\n          # TODO: If docker exec is buggy just use gcr.io/google_containers/mysql-healthz:1.0\n          exec:\n            command:\n            - sh\n            - -c\n            - \"mysql -u root -e 'show databases;'\"\n          initialDelaySeconds: 15\n          timeoutSeconds: 5\n          successThreshold: 2\n        livenessProbe:\n          exec:\n            command:\n            - sh\n            - -c\n            - \"mysql -u root -e 'show databases;'\"\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n        volumeMounts:\n        - name: datadir\n          mountPath: /var/lib/\n        - name: config\n          mountPath: /etc/mysql\n      volumes:\n      - name: config\n        emptyDir: {}\n      - name: workdir\n        emptyDir: {}\n      - name: datadir\n        emptyDir: {}\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: acmeairdbloader\nspec:\n  template:\n    metadata:\n      name: acmeair-dbloader\n    spec:\n      restartPolicy: Never\n      nodeSelector:\n        stack: dryrun\n      containers:\n      - name: acmeair-dbloader\n        image: 10.145.88.66:5000/demo/smartops/mysql-loader\n        env:\n          - name: MYSQL_PORT_3306_TCP_ADDR\n            value: db\n          - name: MYSQL_ENV_MYSQL_ROOT_PASSWORD\n            value: root\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: acmeairapp\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    nodePort: 30185\n    protocol: TCP\n    name: http\n  selector:\n    name: webpods\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: webrc\nspec:\n  replicas: 1\n  #selector:\n  #  name: webpods\n  template:\n    metadata:\n      labels:\n        name: webpods\n        tier: frontend\n    spec:\n      restartPolicy: Always\n      nodeSelector:\n        stack: dryrun\n      # nodeSelector:\n      #   eip : unbonded\n      #   region: cn-north-1\n      #   provider: hwcloud\n      #   stack: app1_dryrun\n      containers:\n      - image: 10.145.88.66:5000/demo/smartops/apps_acmeair:latest\n        name: web\n        resources:\n          limits:\n            cpu: 1000m\n            memory: 1024Mi\n        ports:\n        - containerPort: 8080\n        readinessProbe:\n          httpGet:\n            path: /acmeair\n            port: 8080\n          initialDelaySeconds: 3\n          periodSeconds: 3\n        livenessProbe:\n          httpGet:\n            path: /acmeair\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 3\n        env:\n        - name: HEAP_SIZE\n          valueFrom:\n            resourceFieldRef:\n              resource: requests.memory\n        - name: CPU_LIMIT\n          valueFrom:\n            resourceFieldRef:\n              resource: requests.cpu\n        command: [\"/bin/sh\", \"-c\", \"_JAVA_OPTIONS=-Xmx${HEAP_SIZE} catalina.sh run\"]\n"
}
